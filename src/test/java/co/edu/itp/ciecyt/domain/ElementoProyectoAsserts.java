package co.edu.itp.ciecyt.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ElementoProyectoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertElementoProyectoAllPropertiesEquals(ElementoProyecto expected, ElementoProyecto actual) {
        assertElementoProyectoAutoGeneratedPropertiesEquals(expected, actual);
        assertElementoProyectoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertElementoProyectoAllUpdatablePropertiesEquals(ElementoProyecto expected, ElementoProyecto actual) {
        assertElementoProyectoUpdatableFieldsEquals(expected, actual);
        assertElementoProyectoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertElementoProyectoAutoGeneratedPropertiesEquals(ElementoProyecto expected, ElementoProyecto actual) {
        assertThat(expected)
            .as("Verify ElementoProyecto auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertElementoProyectoUpdatableFieldsEquals(ElementoProyecto expected, ElementoProyecto actual) {
        assertThat(expected)
            .as("Verify ElementoProyecto relevant properties")
            .satisfies(e -> assertThat(e.getDato()).as("check dato").isEqualTo(actual.getDato()))
            .satisfies(e -> assertThat(e.getDescripcion()).as("check descripcion").isEqualTo(actual.getDescripcion()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertElementoProyectoUpdatableRelationshipsEquals(ElementoProyecto expected, ElementoProyecto actual) {
        assertThat(expected)
            .as("Verify ElementoProyecto relationships")
            .satisfies(e -> assertThat(e.getElemento()).as("check elemento").isEqualTo(actual.getElemento()));
    }
}
